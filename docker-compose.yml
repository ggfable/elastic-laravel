version: '3.9'

services:

  core_php:
    build: .
    image: ggfable/core_php:v1
    container_name: core_php
    restart: unless-stopped
    working_dir: /var/www/core
    command: sh -c "composer install && php artisan storage:link && chmod o+w ./storage/ -R && npm install --location=global svgo && php-fpm"
    volumes:
      - ./app:/var/www/core
      - ./php-conf/.env:/var/www/core/.env
      - ./php-conf/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - nginx_network
    depends_on:
      - core_pgsql

  core_nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    image: ggfable/core_nginx:v1
    container_name: core_nginx
    restart: unless-stopped
    working_dir: /var/www/core
    ports:
      - "8082:8082"
      - "8083:8083"
    volumes:
      - ./app:/var/www/core
      - ./php-conf/.env:/var/www/core/.env
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./logs:/var/log/nginx
    networks:
      - nginx_network
    depends_on:
      - core_php

  core_pgsql:
    build:
      context: .
      dockerfile: ./db-conf/Dockerfile
    image: ggfable/core_pgsql:v1
    container_name: core_pgsql
    environment:
      TZ: "Europe/Moscow"
      POSTGRES_DB: "core_db"
      POSTGRES_USER: "core_usr"
      POSTGRES_PASSWORD: "Te0AsCLcYs_wEv_dAS2_sd"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    volumes:
      # - ./init:/docker-entrypoint-initdb.d
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U core_usr -d core_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    networks: 
      - nginx_network

  core_cache:
      image: redis:alpine
      container_name: core_cache
      restart: always
      ports:
        - '6379:6379'
      command: redis-server --save 20 1 --loglevel warning --requirepass 1_t22nFh148lpE8vB8LsWgEH5IP2TjKlO
      volumes: 
        - ./core_cache:/data
      networks: 
        - nginx_network

  create_certs:
    container_name: create_certs
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    command: >
      bash -c '
        if [[ ! -f ./config/certificates/elastic-certificates.p12 ]]; then
          bin/elasticsearch-certutil cert -out config/certificates/elastic-certificates.p12 -pass ""
        fi;
        chown -R 1000:0 /usr/share/elasticsearch/config/certificates
      '
    user: "0"
    working_dir: /usr/share/elasticsearch
    volumes: 
      - ./certs:/usr/share/elasticsearch/config/certificates
    networks: 
        - nginx_network

  elasticsearch:
    container_name: elasticsearch
    depends_on: [create_certs]
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    user: "1000:1000"
    ports:
      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9300:9300"
    volumes:
      - ./elasticsearch-data:/usr/share/elasticsearch/data
      - ./certs:/usr/share/elasticsearch/config/certificates
    environment:
      - ELASTIC_PASSWORD=ASsOdgH_2deqFveyW2_sa # пароль для юзера elastic
      - discovery.type=single-node
      - cluster.routing.allocation.disk.threshold_enabled=false
      - bootstrap.memory_lock=true
      - action.destructive_requires_name=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/certificates/elastic-certificates.p12
      - xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/certificates/elastic-certificates.p12
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks: 
        - nginx_network

  kibana:
    container_name: kibana
    depends_on: [elasticsearch]
    image: docker.elastic.co/kibana/kibana:8.3.3
    environment:
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=ASsOdgH_2deqFveyW2_sa
    ports:
      - "5601:5601"
    networks: 
      - nginx_network

networks:
  nginx_network:
      name: nginx_network
      external: true