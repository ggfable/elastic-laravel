version: '3.9'

services:

  core_php:
    build: .
    image: ggfable/core_php:v1
    container_name: core_php
    restart: unless-stopped
    working_dir: /var/www/core
    command: sh -c "composer install && php artisan storage:link && chmod o+w ./storage/ -R && npm install --location=global svgo && php-fpm"
    volumes:
      - ./app:/var/www/core
      - ./conf/php-conf/.env:/var/www/core/.env
      - ./conf/php-conf/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - nginx_network
    depends_on:
      - core_pgsql

  core_nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    image: ggfable/core_nginx:v1
    container_name: core_nginx
    restart: unless-stopped
    working_dir: /var/www/core
    ports:
      - "8082:8082"
      - "8083:8083"
    volumes:
      - ./app:/var/www/core
      - ./conf/php-conf/.env:/var/www/core/.env
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./logs:/var/log/nginx
    networks:
      - nginx_network
    depends_on:
      - core_php

  core_pgsql:
    build:
      context: .
      dockerfile: ./conf/db-conf/Dockerfile
    image: ggfable/core_pgsql:v1
    container_name: core_pgsql
    environment:
      TZ: "Europe/Moscow"
      POSTGRES_DB: "core_db"
      POSTGRES_USER: "core_usr"
      POSTGRES_PASSWORD: "Te0AsCLcYs_wEv_dAS2_sd"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    volumes:
      # - ./init:/docker-entrypoint-initdb.d
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U core_usr -d core_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks: 
      - nginx_network

  core_cache:
      image: redis:alpine
      container_name: core_cache
      restart: always
      ports:
        - '6379:6379'
      command: redis-server --save 20 1 --loglevel warning --requirepass 1_t22nFh148lpE8vB8LsWgEH5IP2TjKlO
      volumes: 
        - ./core_cache:/data
      networks: 
        - nginx_network

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    user: "1000:1000"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./elasticsearch-data:/usr/share/elasticsearch/data
      - ./logs/elasticsearch:/usr/share/elasticsearch/logs
    environment:
      - node.name=elasticsearch
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTIC_PASSWORD=ASsOdgH_2deqFveyW2 # пароль для юзера elastic
      - discovery.type=single-node
      - cluster.routing.allocation.disk.threshold_enabled=false
      - bootstrap.memory_lock=true
      - transport.host=localhost
      - action.destructive_requires_name=false
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks: 
      - nginx_network

  kibana:
    container_name: kibana
    depends_on: [elasticsearch]
    image: docker.elastic.co/kibana/kibana:8.3.3
    environment:
      - ELASTICSEARCH_HOST=elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=ASsOdgH_2deqFveyW2
      - xpack.monitoring.ui.container.elasticsearch.enabled=true
    volumes:
      - ./kibanadata:/usr/share/kibana/data
    ports:
      - "5601:5601"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://kibana:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    links:
      - elasticsearch
    networks: 
      - nginx_network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.3.3
    container_name: logstash
    depends_on: [elasticsearch]
    ports:
      - "9600:9600"
      - "5044:5044"
    volumes:
      - ./conf/logstash/conf.d/:/usr/share/logstash/pipeline/
    environment:
      - xpack.monitoring.elasticsearch.hosts=elasticsearch:9200
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
    networks:
      - nginx_network

  filebeat:
    build:
      context: .
      dockerfile: ./conf/filebeat/Dockerfile
    container_name: filebeat
    image: ggfable/core_filebeat:v1
    user: root
    command: 
      - "-e"
      - "--strict.perms=false"
    depends_on: 
      - elasticsearch
      - logstash
      - kibana
    restart: on-failure
    environment:
      - "setup.kibana.host=kibana:5601"
      - "output.elasticsearch.hosts=elasticsearch:9200"
    volumes:
      - ./conf/filebeat/modules.d:/usr/share/filebeat/modules.d
      - ./logs/elasticsearch:/var/elk/logs
      - ./logs/core:/var/log/core
    networks:
      - nginx_network

  metricbeat:
    build:
      context: .
      dockerfile: ./conf/metricbeat/Dockerfile
    image: ggfable/core_metricbeat:v1
    container_name: metricbeat
    user: root
    restart: unless-stopped
    command:
      - "-e"
      - "--strict.perms=false"
    environment:
      - "HOST_ELASTICSEARCH=elasticsearch:9200"
      - "HOST_KIBANA=kibana:5601"
    volumes:
      - ./conf/metricbeat/modules.d:/usr/share/metricbeat/modules.d
      - ./metricbeat-data:/usr/share/metricbeat/data
      - ./conf/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - //var/run/docker.sock://var/run/docker.sock
    networks:
      - nginx_network
    depends_on: 
      - elasticsearch

networks:
  nginx_network:
      name: nginx_network
      external: true